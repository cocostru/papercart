<modification>
	<id><![CDATA[This vqmod implements: cart.]]></id>
	<version><![CDATA[2.2.0.0]]></version>
	<vqmver><![CDATA[2.3]]></vqmver>
	<author><![CDATA[dk.pochtamp@gmail.com]]></author>

    <file path="/catalog/controller/common/" name="cart.php">
	  <operation>
			<search position="replace"><![CDATA[$data['text_items'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');

			$data['text_items'] = $state ? ($this->cart->countProducts() ? '<span class="cart-extra">&nbsp; x&nbsp; ' . $this->cart->countProducts() . '</span>' : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));

			// $data['text_items'] = $state ? ($this->cart->countProducts() ? sprintf('<span class="cart-extra">' . $this->language->get('text_items') . '</span>', $this->cart->countProducts(), $this->currency->format($total, $this->session->data['currency'])) : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
	    	]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[return $this->load->view('common/cart', $data);]]></search>
			<add><![CDATA[
			return $state ? $this->load->view('common/cart_mod', $data) : $this->load->view('common/cart', $data);
	    	]]></add>
		</operation>
	</file>

	<file path="/catalog/controller/checkout/" name="cart.php">
		<operation>
			<search position="replace"><![CDATA[$json['total'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');

			$json['total'] = $state ? ($this->cart->countProducts() ? sprintf('<span class="cart-extra">&nbsp; x&nbsp; ' . $this->cart->countProducts() . '</span>', $this->cart->countProducts(), $this->currency->format($total, $this->session->data['currency'])) : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));

			// $json['total'] = $state ? ($this->cart->countProducts() ? sprintf('<span class="cart-extra">' . $this->language->get('text_items') . '</span>', $this->cart->countProducts(), $this->currency->format($total, $this->session->data['currency'])) : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
	    	]]></add>
		</operation>
	  	<operation>
			<search position="before"><![CDATA[public function add() {]]></search>
			<add><![CDATA[
			public function add_multiple() {
		        $this->load->language('checkout/cart');
		        $this->load->model('catalog/product');
				$json = array();
				$success = '';

		       	for ($i = 0, $l = count($this->request->post['product_id']); $i < $l; $i++) {

			        if (isset($this->request->post['quantity'][$i]) && ($this->request->post['quantity'][$i])>0 ) {

						$product_id = $this->request->post['product_id'][$i];
						$product_info = $this->model_catalog_product->getProduct($product_id);

						if ($product_info) {

							if (isset($this->request->post['option'])) {
								$option = array_filter($this->request->post['option']);
							} else {
								$option = array();
							}

							$products_to_add[] = array(
								'product_id' => $this->request->post['product_id'][$i],
								'quantity'   => $this->request->post['quantity'][$i],
								'name'       => $product_info['name'],
								'option'     => $option,
							);
			    	    }
			    	}
			    }

			    if (!isset($error)) {
					foreach ($products_to_add as $product_to_add) {
						$this->cart->add($product_to_add['product_id'], $product_to_add['quantity'], $product_to_add['option']);

						$success .= '<a href="' . ($this->url->link('product/product', 'product_id=' . $product_to_add['product_id'])) . '">' . $product_to_add['name'] . '</a>, ';

						unset($this->session->data['shipping_method']);
						unset($this->session->data['shipping_methods']);
						unset($this->session->data['payment_method']);
						unset($this->session->data['payment_methods']);

						$this->load->model('extension/extension');

						$totals = array();
						$taxes = $this->cart->getTaxes();
						$total = 0;
						$total_data = array(
							'totals' => &$totals,
							'taxes'  => &$taxes,
							'total'  => &$total
						);

						if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
							$sort_order = array();
							$results = $this->model_extension_extension->getExtensions('total');
							foreach ($results as $key => $value) {
								$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
							}
							array_multisort($sort_order, SORT_ASC, $results);
							foreach ($results as $result) {
								if ($this->config->get($result['code'] . '_status')) {
									$this->load->model('total/' . $result['code']);
									$this->{'model_total_' . $result['code']}->getTotal($total_data);
								}
							}
							$sort_order = array();
							foreach ($totals as $key => $value) {
								$sort_order[$key] = $value['sort_order'];
							}
							array_multisort($sort_order, SORT_ASC, $totals);
						}

						$state = $this->config->get('paper_filter_status');

		        		$json['success'] = sprintf($this->language->get('text_success_multiple'), rtrim($success, ", "), count($products_to_add) > 1 ? 'have' : 'has', $this->url->link('checkout/cart'));

						$json['total'] = $state ? ($this->cart->countProducts() ? '<span class="cart-extra">&nbsp; x&nbsp; ' . $this->cart->countProducts() . '</span>' : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));

						// $json['total'] = $state ? ($this->cart->countProducts() ? sprintf('<span class="cart-extra">' . $this->language->get('text_items') . '</span>', $this->cart->countProducts(), $this->currency->format($total, $this->session->data['currency'])) : '') : sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total, $this->session->data['currency']));
					}
				}

				$this->response->addHeader('Content-Type: application/json');
				$this->response->setOutput(json_encode($json));
			}
		    ]]></add>
		</operation>
	</file>

    <file path="/catalog/language/en-gb/checkout/" name="cart.php">
		<operation>
		    <search position="after"><![CDATA[// Text]]></search>
			<add><![CDATA[
			$_['text_success_multiple']  = '<a><i class="fa fa-check"></i></a><br/><br/>%s<br/><br/><small>%s been added to your</small><br/><br/><a href="%s"><i class="fa fa-share-square"></i> Cart</a>';
			$_['error_warning']          = 'Please check form carefully for errors.';
			]]></add>
		</operation>
	</file>

</modification>
