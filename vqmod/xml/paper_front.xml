<modification>
	<id><![CDATA[This vqmod implements: header, home, category, search & category module.]]></id>
	<version><![CDATA[2.2.0.0]]></version>
	<vqmver><![CDATA[2.3]]></vqmver>
	<author><![CDATA[dk.pochtamp@gmail.com]]></author>

	<file path="/catalog/controller/common/" name="header.php">
	  	<operation>
			<search position="replace"><![CDATA[return $this->load->view('common/header', $data);]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');
			return $state ? $this->load->view('common/header_mod', $data) : $this->load->view('common/header', $data);
	    	]]></add>
		</operation>
	</file>

	<file path="/catalog/model/catalog/" name="product.php">
		<operation>
			<search position="after"><![CDATA[$product_option_data[] = array(]]></search>
			<add><![CDATA[
			'option_alt' => key_exists('option_alt', $product_option) ? $product_option['option_alt'] : '',
			]]></add>
		</operation>
	</file>

	<file path="/catalog/controller/common/" name="home.php">
		<operation>
			<search position="before"><![CDATA[$this->response->setOutput($this->load->view('common/home', $data));]]></search>
			<add><![CDATA[
			$this->load->language('product/category');
			$this->load->model('catalog/manufacturer');
			$this->load->model('catalog/category');

			$data['column_image'] = $this->language->get('column_image');
			$data['column_name'] = $this->language->get('column_name');
			$data['column_quantity'] = $this->language->get('column_quantity');
			$data['column_qty_buy'] = $this->language->get('column_qty_buy');
			$data['column_price'] = $this->language->get('column_price');
			$data['column_total'] = $this->language->get('column_total');
			$data['column_location'] = $this->language->get('column_location');
			$data['button_cart'] = $this->language->get('button_cart');
			$data['text_stock'] = $this->language->get('text_stock');
			$data['cart'] = $this->load->controller('common/cart');

			$this->load->model('localisation/country');
			$this->load->model('localisation/zone');
			$data['countries'] = array();
			$countries = $this->model_localisation_country->getCountries();
			foreach($countries as $country){
				$zones = $this->model_localisation_zone->getZonesByCountryId($country['country_id']);
				$data['countries'][] = [
					'id' 	=> $country['country_id'],
					'name'  => $country['name'],
					'code'  => $country['iso_code_3'],
					'zones' => $zones
				];
			}

            $data['weights'] = $this->weight->getWeights();
			$data['bunit_sess'] = key_exists('bunit', $this->session->data) ? $this->session->data['bunit'] : '';

			$tresholds = array();

			$filter_data = array(
				'filter_category_id' => '',
				'filter_filter'      => '',
				'sort'               => '',
				'order'              => '',
				'limit'              => 1000,
				'start'              => 0
			);

			foreach($this->model_catalog_product->getProducts($filter_data) as $result){

				$product_info = $this->model_catalog_product->getProduct($result['product_id']);
				$product_cats = $this->model_catalog_product->getCategories($result['product_id']);

				$thresholds[$product_info['model']][] = $product_info['threshold'];

				foreach ($product_cats as $product_cat) {
					$category_info = $this->model_catalog_category->getCategory($product_cat['category_id']);
					$thresholds[$product_info['model']][] = $category_info['threshold'];
				}

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				$manufacturer = $this->model_catalog_manufacturer->getManufacturer($product_info['manufacturer_id']);

				if ($product_info['quantity'] <= 0) {
					$data['stock'] = $product_info['stock_status'];
				} elseif ($this->config->get('config_stock_display')) {
					$data['stock'] = max($thresholds[$product_info['model']]) != 0 && max($thresholds[$product_info['model']]) < $product_info['quantity'] ? max($thresholds[$product_info['model']]) . ' +' : $product_info['quantity'];
				} else {
					$data['stock'] = $this->language->get('text_instock');
				}
				$base_unit = array();
				$alt_unit = array();
				$alt_qty = array();
				$alt_loc = array();
				foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
					if ($option['option_alt'] == 1) $base_unit = $option;
					if ($option['option_alt'] == 2) $alt_unit = $option;
					if ($option['option_alt'] == 3) $alt_qty = $option;
					if ($option['option_alt'] == 4) $alt_loc = $option;
				}

				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')),
					'stock'       => $data['stock'],
					'location' 	  => $product_info['location'],
					'manufacturer'=> $manufacturer,
					'length' 	  => $this->length->convert($product_info['length'], $product_info['length_class_id'], 1),
					'width' 	  => $this->length->convert($product_info['width'], $product_info['length_class_id'], 1),
					'gsm' 	  	  => $product_info['height'],
					'weight' 	  => $product_info['weight'],
					'weight_unit' => $this->weight->getUnit($product_info['weight_class_id']),
					'base_unit'	  => $base_unit,
					'alt_unit'	  => $alt_unit,
					'alt_qty'	  => $alt_qty,
					'alt_loc'	  => $alt_loc,
					'name'        => $result['name'],
					'model'       => $result['model'],
					'price'       => $price,
					'special'     => $special,
					'href'        => $this->url->link('product/product', '&product_id=' . $result['product_id'])
				);

			}
	    	]]></add>
		</operation>
	  	<operation>
			<search position="replace"><![CDATA[$this->response->setOutput($this->load->view('common/home', $data));]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');
			$state ? $this->response->setOutput($this->load->view('common/home_mod', $data)) : $this->response->setOutput($this->load->view('common/home', $data));
	    	]]></add>
		</operation>
	</file>

	<file path="/catalog/controller/product/" name="category.php">
		<operation>
			<search position="after"><![CDATA[$data['button_grid'] = $this->language->get('button_grid');]]></search>
			<add><![CDATA[
			$data['column_image'] = $this->language->get('column_image');
			$data['column_name'] = $this->language->get('column_name');
			$data['column_quantity'] = $this->language->get('column_quantity');
			$data['column_qty_buy'] = $this->language->get('column_qty_buy');
			$data['column_price'] = $this->language->get('column_price');
			$data['column_total'] = $this->language->get('column_total');
			$data['column_location'] = $this->language->get('column_location');
			$data['button_cart'] = $this->language->get('button_cart');
			$data['text_stock'] = $this->language->get('text_stock');
			$data['text_loading'] = $this->language->get('text_loading');
			$data['cart'] = $this->load->controller('common/cart');

			$this->load->model('localisation/country');
			$this->load->model('localisation/zone');
			$data['countries'] = array();
			$countries = $this->model_localisation_country->getCountries();
			foreach($countries as $country){
				$zones = $this->model_localisation_zone->getZonesByCountryId($country['country_id']);
				$data['countries'][] = [
					'id' 	=> $country['country_id'],
					'name'  => $country['name'],
					'code'  => $country['iso_code_3'],
					'zones' => $zones
				];
			}

			$data['weights'] = $this->weight->getWeights();
            $data['bunit_sess'] = key_exists('bunit', $this->session->data) ? $this->session->data['bunit'] : '';
      		]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[if ($this->config->get('config_review_status')) {]]></search>
			<add><![CDATA[
			$this->load->model('catalog/manufacturer');
			$product_info = $this->model_catalog_product->getProduct($result['product_id']);
			$product_cats = $this->model_catalog_product->getCategories($result['product_id']);

			foreach ($product_cats as $product_cat) {
				$category_info = $this->model_catalog_category->getCategory($product_cat['category_id']);
				$thresholds[$product_info['model']][] = $category_info['threshold'];
			}
		    $manufacturer = $this->model_catalog_manufacturer->getManufacturer($product_info['manufacturer_id']);
			if ($product_info['quantity'] <= 0) {
				$data['stock'] = $product_info['stock_status'];
			} elseif ($this->config->get('config_stock_display')) {
				$data['stock'] = max($thresholds[$product_info['model']]) != 0 && max($thresholds[$product_info['model']]) < $product_info['quantity'] ? max($thresholds[$product_info['model']]) . ' +' : $product_info['quantity'];
			} else {
				$data['stock'] = $this->language->get('text_instock');
			}
			$base_unit = array();
			$alt_unit = array();
			$alt_qty = array();
			$alt_loc = array();
			foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
				if ($option['option_alt'] == 1) $base_unit = $option;
				if ($option['option_alt'] == 2) $alt_unit = $option;
				if ($option['option_alt'] == 3) $alt_qty = $option;
				if ($option['option_alt'] == 4) $alt_loc = $option;
			}
			]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA['name'        => $result['name'],]]></search>
			<add><![CDATA[
			'name'        => $result['name'],
			'model'       => $result['model'],
			'stock'       => $data['stock'],
			'location' 	  => $product_info['location'],
			'manufacturer'=> $manufacturer,
			'length' 	  => number_format($this->length->convert($product_info['length'], $product_info['length_class_id'], 1), 1),
			'width' 	  => number_format($this->length->convert($product_info['width'], $product_info['length_class_id'], 1), 1),
			'gsm' 	  	  => number_format($product_info['height'], 0),
			'weight' 	  => number_format($product_info['weight'], 2) . $this->weight->getUnit($product_info['weight_class_id']),
			'weight_unit' => $this->weight->getUnit($product_info['weight_class_id']),
			'base_unit'	  => $base_unit,
			'alt_unit'	  => $alt_unit,
			'alt_qty'	  => $alt_qty,
			'alt_loc'	  => $alt_loc,
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',]]></search>
			<add><![CDATA[
			'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$this->response->setOutput($this->load->view('product/category', $data));]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');
			return $state ? $this->response->setOutput($this->load->view('product/category_mod', $data)) : $this->response->setOutput($this->load->view('product/category', $data));
			]]></add>
		</operation>
	</file>

	<file path="/catalog/controller/product/" name="search.php">
		<operation>
			<search position="after"><![CDATA[$data['button_grid'] = $this->language->get('button_grid');]]></search>
			<add><![CDATA[
			$data['column_image'] = $this->language->get('column_image');
			$data['column_name'] = $this->language->get('column_name');
			$data['column_quantity'] = $this->language->get('column_quantity');
			$data['column_qty_buy'] = $this->language->get('column_qty_buy');
			$data['column_price'] = $this->language->get('column_price');
			$data['column_total'] = $this->language->get('column_total');
			$data['column_location'] = $this->language->get('column_location');
			$data['button_cart'] = $this->language->get('button_cart');
			$data['text_stock'] = $this->language->get('text_stock');
			$data['cart'] = $this->load->controller('common/cart');

			$this->load->model('localisation/country');
			$this->load->model('localisation/zone');
			$data['countries'] = array();
			$countries = $this->model_localisation_country->getCountries();
			foreach($countries as $country){
				$zones = $this->model_localisation_zone->getZonesByCountryId($country['country_id']);
				$data['countries'][] = [
					'id' 	=> $country['country_id'],
					'name'  => $country['name'],
					'code'  => $country['iso_code_3'],
					'zones' => $zones
				];
			}

			$data['weights'] = $this->weight->getWeights();
            $data['bunit_sess'] = key_exists('bunit', $this->session->data) ? $this->session->data['bunit'] : '';
			]]></add>
		</operation>
		<operation>
			<search position="before" index="1"><![CDATA[if ($this->config->get('config_review_status')) {]]></search>
			<add><![CDATA[
			$this->load->model('catalog/manufacturer');
			$product_info = $this->model_catalog_product->getProduct($result['product_id']);
			$product_cats = $this->model_catalog_product->getCategories($result['product_id']);

			foreach ($product_cats as $product_cat) {
				$category_info = $this->model_catalog_category->getCategory($product_cat['category_id']);
				$thresholds[$product_info['model']][] = $category_info['threshold'];
			}
		  	$manufacturer = $this->model_catalog_manufacturer->getManufacturer($product_info['manufacturer_id']);
			if ($product_info['quantity'] <= 0) {
				$data['stock'] = $product_info['stock_status'];
			} elseif ($this->config->get('config_stock_display')) {
				$data['stock'] = max($thresholds[$product_info['model']]) != 0 && max($thresholds[$product_info['model']]) < $product_info['quantity'] ? max($thresholds[$product_info['model']]) . ' +' : $product_info['quantity'];
			} else {
				$data['stock'] = $this->language->get('text_instock');
			}
			$base_unit = array();
			$alt_unit = array();
			$alt_qty = array();
			$alt_loc = array();
			foreach ($this->model_catalog_product->getProductOptions($result['product_id']) as $option) {
				if ($option['option_alt'] == 1) $base_unit = $option;
				if ($option['option_alt'] == 2) $alt_unit = $option;
				if ($option['option_alt'] == 3) $alt_qty = $option;
				if ($option['option_alt'] == 4) $alt_loc = $option;
			}
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA['name'        => $result['name'],]]></search>
			<add><![CDATA[
			'name'        => $result['name'],
			'model'       => $result['model'],
			'stock'       => $data['stock'],
			'location' 	  => $product_info['location'],
			'manufacturer'=> $manufacturer,
			'length' 	  => $this->length->convert($product_info['length'], $product_info['length_class_id'], 1),
			'width' 	  => $this->length->convert($product_info['width'], $product_info['length_class_id'], 1),
			'gsm' 	  	  => $product_info['height'],
			'weight' 	  => $product_info['weight'],
			'weight_unit' => $this->weight->getUnit($product_info['weight_class_id']),
			'base_unit'	  => $base_unit,
			'alt_unit'	  => $alt_unit,
			'alt_qty'	  => $alt_qty,
			'alt_loc'	  => $alt_loc,
	    	]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA['description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',]]></search>
			<add><![CDATA[
			'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')),
			]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$this->response->setOutput($this->load->view('product/search', $data));]]></search>
			<add><![CDATA[
			$state = $this->config->get('paper_filter_status');
			$state ? $this->response->setOutput($this->load->view('product/search_mod', $data)) : $this->response->setOutput($this->load->view('product/search', $data));
	    	]]></add>
		</operation>
	</file>

	<file path="/catalog/controller/module/" name="category.php">
		<operation>
			<search position="after"><![CDATA[public function index() {]]></search>
			<add><![CDATA[
			$this->load->model('localisation/country');
			$this->load->model('localisation/zone');
			$data['countries'] = array();
			$countries = $this->model_localisation_country->getCountries();
			foreach($countries as $country){
				$zones = $this->model_localisation_zone->getZonesByCountryId($country['country_id']);
				$data['countries'][] = [
					'id' 	=> $country['country_id'],
					'name'  => $country['name'],
					'code'  => $country['iso_code_3'],
					'zones' => $zones
				];
			}

			$state = $this->config->get('paper_filter_status');
			$data['range_filter'] = $this->config->get('range_filter');
			$data['manufacturer_filter'] = $this->config->get('manufacturer_filter');
			$data['location_filter'] = $this->config->get('location_filter');
			$data['reel_filter'] = $this->config->get('reel_filter');
			$data['grain_filter'] = $this->config->get('grain_filter');
	    	]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[if ($category['category_id'] == $data['category_id']) {]]></search>
			<add><![CDATA[
			if ($state ? $category['category_id'] : ($category['category_id'] == $data['category_id'])) {
	    	]]></add>
		</operation>
	  	<operation>
			<search position="replace"><![CDATA[return $this->load->view('module/category', $data);]]></search>
			<add><![CDATA[
			return $state ? $this->load->view('module/category_mod', $data) : $this->load->view('module/category', $data);
	    	]]></add>
		</operation>
	</file>

	<file path="/catalog/language/en-gb/product/" name="category.php">
		<operation>
	        <search position="after"><![CDATA[$_['text_limit']        = 'Show:';]]></search>
			<add><![CDATA[
			$_['text_minimum']                            = 'This product has a minimum quantity of %s';
			$_['column_image']                            = 'Image';
			$_['column_name']                             = 'Product Name';
			$_['column_model']                            = 'Product Code';
			$_['column_quantity']                         = 'Qty';
			$_['column_qty_buy']                          = 'Buy';
			$_['column_price']                            = 'Unit Price';
			$_['column_total']                            = 'Total';
			$_['column_location']                         = 'Location';
			$_['text_option']                             = 'Available Options';
			$_['text_payment_recurring']                  = 'Payment Profiles';
			$_['text_trial_description']                  = '%s every %d %s(s) for %d payment(s) then';
			$_['text_payment_description']                = '%s every %d %s(s) for %d payment(s)';
			$_['text_payment_until_canceled_description'] = '%s every %d %s(s) until canceled';
			$_['text_reward']                             = 'Reward Points:';
			$_['text_points']                             = 'Price in reward points:';
			$_['text_discount']                           = ' or more ';
			$_['text_stock']                              = 'Availability';
			$_['text_instock']                            = '+';
			]]></add>
		</operation>
	</file>

	<file path="/catalog/language/en-gb/product/" name="search.php">
	    <operation>
			<search position="after"><![CDATA[$_['text_limit']        = 'Show:';]]></search>
			<add><![CDATA[
			$_['text_minimum']                            = 'This product has a minimum quantity of %s';
			$_['column_image']                            = 'Image';
			$_['column_name']                             = 'Product Name';
			$_['column_model']                            = 'Product Code';
			$_['column_quantity']                         = 'Qty';
			$_['column_qty_buy']                          = 'Qty buy';
			$_['column_price']                            = 'Unit Price';
			$_['column_total']                            = 'Total';
			$_['column_location']                         = 'Location';
			$_['text_option']                             = 'Available Options';
			$_['text_payment_recurring']                  = 'Payment Profiles';
			$_['text_trial_description']                  = '%s every %d %s(s) for %d payment(s) then';
			$_['text_payment_description']                = '%s every %d %s(s) for %d payment(s)';
			$_['text_payment_until_canceled_description'] = '%s every %d %s(s) until canceled';
			$_['text_reward']                             = 'Reward Points:';
			$_['text_points']                             = 'Price in reward points:';
			$_['text_discount']                           = ' or more ';
			$_['text_stock']                              = 'Availability';
			$_['text_instock']                            = '+';
			]]></add>
		</operation>
	</file>

</modification>
